import asyncio
import sqlite3
from datetime import datetime, date, timedelta

from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text
from aiogram.types import ChatPermissions

import payment
from create_bot import bot, bot_address, dp
from keyboards.client_kb import keyboard, kb_client, back_keyboard_1, back_keyboard_0, pay_3_1, pay_3_2, pay_2
from order_DB import Orders
from school_database import sqlite_db
from school_database.sqlite_db import get_all_subscriptions

"""–•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º

    group_id:-1002030571529
    
    –ò–≤–∞–Ω –ù–µ—Ä–µ—Ç–∏–Ω 1085385124
"""


def start():
    loop = asyncio.get_event_loop()
    loop.create_task(remind_subscriptions())
    loop1 = asyncio.get_event_loop()
    loop1.create_task(remove_expired_subscriptions())


async def remove_expired_subscriptions():
    while True:
        # –í–∞—à –∫–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å—Ç–µ–∫—à–∏–º —Å—Ä–æ–∫–æ–º –ø–æ–¥–ø–∏—Å–∫–∏
        conn = sqlite3.connect('bot_sql.db')
        cur = conn.cursor()
        cur.execute("SELECT user_id FROM users WHERE end_date < date('now')")
        expired_users = cur.fetchall()  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å—Ç–µ–∫—à–∏–º —Å—Ä–æ–∫–æ–º –ø–æ–¥–ø–∏—Å–∫–∏
        cur.execute("DELETE FROM users WHERE end_date < date('now')")
        conn.commit()
        conn.close()

        # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –≥—Ä—É–ø–ø—ã
        for user_id in expired_users:
            try:
                # –£–∫–∞–∑—ã–≤–∞–µ—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                group_id = -1002030571529
                await bot.restrict_chat_member(group_id, user_id, ChatPermissions(can_send_messages=False))
                await bot.kick_chat_member(group_id, user_id)
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –≥—Ä—É–ø–ø—ã.")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥—Ä—É–ø–ø—ã: {e}")

        # –ü–∞—É–∑–∞ –Ω–∞ –æ–¥–∏–Ω –¥–µ–Ω—å –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        await asyncio.sleep(86400)  # 86400 —Å–µ–∫—É–Ω–¥ = 24 —á–∞—Å–∞


async def remind_subscriptions():
    print(1)
    while True:
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            subscriptions = get_all_subscriptions()

            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
            current_date = date.today()

            # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
            for subscription in subscriptions:
                id, user_id, username, full_name, start_date, end_date = subscription

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
                days_left = (datetime.strptime(end_date, '%Y-%m-%d').date() - current_date).days

                # –ï—Å–ª–∏ –æ—Å—Ç–∞–ª—Å—è —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω –¥–µ–Ω—å –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                if days_left == 1:
                    message = f"{full_name}!–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –∑–∞–≤—Ç—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–ª–∏—Ç–µ –µ—ë!"
                    await bot.send_message(user_id, message)

        except Exception as e:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")

        # –ü–∞—É–∑–∞ –Ω–∞ –æ–¥–∏–Ω –¥–µ–Ω—å –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π
        await asyncio.sleep(86400)  # 86400 —Å–µ–∫—É–Ω–¥ = 24 —á–∞—Å–∞


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /groupid
@dp.message_handler(commands=['groupid'])
async def show_group_id(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –≤ –≥—Ä—É–ø–ø—É
    if message.chat.type != types.ChatType.PRIVATE:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã
        await message.reply(f"ID —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã: {message.chat.id}")
    else:
        await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /kick
async def kick_user(message: types.Message, user_id, group_id):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É
    if message.chat.type == types.ChatType.PRIVATE:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã —É–∫–∞–∑–∞–ª –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã
        if 1:
            try:
                # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
                group_id = -1002030571529
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —É–∫–∞–∑–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã
                if message.from_user.id in [admin.user.id for admin in await bot.get_chat_administrators(group_id)]:
                    # –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å
                    user_id = 1085385124
                    # –ü–µ—Ä–µ–¥–∞–µ–º –ø—Ä–∞–≤–∞, –∑–∞–ø—Ä–µ—â–∞—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ
                    await bot.restrict_chat_member(group_id, user_id, ChatPermissions(can_send_messages=False))
                    # –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥—Ä—É–ø–ø—ã
                    await bot.kick_chat_member(group_id, user_id)
                    await message.reply(
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.full_name} –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –≥—Ä—É–ø–ø—ã.")
                else:
                    await message.reply("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —É–∫–∞–∑–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã.")
            except ValueError:
                await message.reply("–ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º.")
        else:
            await message.reply("–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã –≤–º–µ—Å—Ç–µ —Å –∫–æ–º–∞–Ω–¥–æ–π.")
    else:
        await message.reply("–ö–æ–º–∞–Ω–¥–∞ /kick –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –±–æ—Ç—É.")


@dp.message_handler(commands=['start', 'help'])
async def start_bot(message: types.Message):
    bot_home = bot_address  # –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å –±–æ—Ç–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º —Å—Ç—Ä–æ–∫–æ–π 't.me/bot'
    print(message.from_user.id, message.from_user.full_name)

    await bot.send_message(message.from_user.id,
                           f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å, {message.from_user.full_name} üëã',
                           reply_markup=kb_client
                           )
    await bot.send_message(message.from_user.id,
                           f'üóì –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ωüëáüëã',
                           reply_markup=keyboard)

    # await message.reply(f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –≤ –õ–°: {bot_home}')


def create_pay_button(message: types.Message, amount, description):
    pay = payment.create_payment(full_name=message.from_user.full_name, amount=amount, description=description)
    keyboard = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton(text=description, callback_data="tariff_3_1",
                                        url=pay.confirmation.confirmation_url)
    print(pay.id)
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞
    orders = Orders()
    orders.create_order(pay.id, message.from_user.id, message.from_user.username,
                        message.from_user.full_name, pay.description, amount)
    keyboard.add(button)
    confirm_keyboard = types.InlineKeyboardMarkup()
    confirm_button = types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data=f"order {pay.id}")
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞
    confirm_keyboard.add(confirm_button)
    return keyboard, confirm_keyboard


@dp.callback_query_handler(lambda c: c.data.startswith('tariff'))
async def process_callback(callback_query: types.CallbackQuery):
    await callback_query.answer()
    data = callback_query.data
    if data == "tariff_1":
        await callback_query.message.reply("–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫ - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –º–æ–π —Å—Ç–∏–ª—å –≤–µ–¥–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π.",
                                           reply_markup=back_keyboard_1)
    elif data == "tariff_2":
        keybourd, confirm_keybourd = create_pay_button(callback_query, 1.00,
                                                       "–ö—É–ø–∏—Ç—å –∫—É—Ä—Å –∑–∞ 1490")
        await callback_query.message.reply("–ö—É—Ä—Å –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ - 4 –ø—Ä–∞–∫—Ç–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è "
                                           "–ø–æ–¥–≤–∏–∂–Ω–æ—Å—Ç–∏ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –∏ –æ—Ç—Å—Ç—Ä–æ–π–∫–∞–º–∏.",
                                           reply_markup=keybourd)
        await callback_query.message.reply("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä", reply_markup=confirm_keybourd)
    elif data == "tariff_3":
        keybourd, confirm_keybourd = create_pay_button(callback_query, 2.00, "–û–ø–ª–∞—Ç–∏—Ç—å –æ–Ω–ª–∞–π–Ω –∫–ª—É–± –Ω–∞ –º–µ—Å—è—Ü 2800‚ÇΩ")
        await callback_query.message.reply("–ö–ª—É–± - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö "
                                           "–∏ –ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–∞–ø–∏—Å—è–º –∑–∞–Ω—è—Ç–∏–π.",
                                           reply_markup=keybourd)
        await callback_query.message.reply("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä", reply_markup=confirm_keybourd)
    if data == "tariff_1_1":
        await callback_query.message.reply("https://www.youtube.com/watch?v=Q8axQa1QSCI",
                                           reply_markup=back_keyboard_0)
    elif data == "tariff_2_1":
        await callback_query.message.reply("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–ø–ª–∞—Ç–µ", reply_markup=pay_2)
    elif data == "tariff_3_1":
        await callback_query.message.reply("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–ø–ª–∞—Ç–µ", reply_markup=pay_3_1)
    elif data == "tariff_3_2":
        await callback_query.message.reply("–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –≤ –∫–ª—É–±–µ –æ—Ñ–ª–∞–π–Ω —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∫—É—Ä–∞—Ç–æ—Ä–æ–º",
                                           reply_markup=pay_3_2)
    elif data == "tariff_3_2_1":
        await get_contacts(callback_query)
    elif data == "tariff_0":
        await callback_query.message.reply(
            f'üóì –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ωüëáüëã',
            reply_markup=keyboard)
    # else:–æ
    #     await callback_query.message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


@dp.callback_query_handler(lambda c: c.data.startswith('order'))
async def process_callback(callback_query: types.CallbackQuery):
    await callback_query.answer()

    data = callback_query.data
    if payment.check_payment_status(data[6:]):
        orders = Orders()
        orders.confirm_order(data[6:])
        sqlite_db.add_subscription(str(callback_query.from_user.id), str(callback_query.from_user.username),
                                   str(callback_query.from_user.full_name),
                                   datetime.now().date(),
                                   datetime.now().date() + timedelta(days=31))
        await callback_query.message.reply("–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ –£–°–ü–ï–®–ù–û")
    else:
        await callback_query.message.reply("–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ –ù–ï–£–°–ü–ï–®–ù–û")


@dp.message_handler(Text(equals='–ü–æ–º–æ—â—å', ignore_case=True))
async def get_contacts(message: types.Message):
    address = "lt.oren@mail.ru"
    phones = '+7 903 360-69-03'
    telegram = '@russian_yoga_girl'
    await bot.send_message(message.from_user.id, f'–ü–æ—á—Ç–∞:: {address} \n–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä: {phones}'
                                                 f'\n–¢–µ–ª–µ–≥—Ä–∞–º–º: {telegram}', )


@dp.message_handler(Text(equals='–ö—É—Ä—Å –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤', ignore_case=True))
async def course_for_beginners(message: types.Message):
    await bot.send_message(message.from_user.id, f'1 –£—Ä–æ–∫. –û–±—â–∞—è –º–æ–±–∏–ª–∏–∑–∞—Ü–∏—è.\n\n'
                                                 f'https://youtu.be/wPY_pjVaCPw\n\n'
                                                 f'2 –£—Ä–æ–∫. –ü—Ä–æ–¥–æ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø—Ä–æ–¥–æ–ª—å–Ω–æ–º—É —à–ø–∞–≥–∞—Ç—É.\n\n'
                                                 f'https://youtu.be/Bg8UdyWs25Q\n\n'
                                                 f'3 –£—Ä–æ–∫. –ü–æ–ø–µ—Ä–µ—á–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø–æ–ø–µ—Ä–µ—á–Ω–æ–º—É —à–ø–∞–≥–∞—Ç—É.\n\n'
                                                 f'https://youtu.be/LvVoG9Eprb8\n\n'
                                                 f'4 –£—Ä–æ–∫. –ü—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–∑–æ–±–µ–¥—Ä–µ–Ω–Ω—ã—Ö —Å—É—Å—Ç–∞–≤–æ–≤.\n\n'
                                                 f'https://youtu.be/1RwMGYVDGS8\n\n'
                                                 f'–£—Ä–æ–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —á–µ—Ä–µ–¥–æ–≤–∞—Ç—å, –¥–µ–ª–∞—è –º–µ–∂–¥—É –Ω–∏–º–∏ —Ä–∞–≤–Ω—ã–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–µ—Ä–µ—Ä—ã–≤—ã. –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ –¥–µ–Ω—å.\n'
                                                 f'–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ, —á—Ç–æ –∑–∞–Ω–∏–º–∞—è—Å—å –ø–æ –≤–∏–¥–µ–æ, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ –ø–∞—É–∑—É, '
                                                 f'—á—Ç–æ–±—ã —É–¥–µ–ª–∏—Ç—å –±–æ–ª—å—à–µ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º, –ø—Ä–∏—Å–ª—É—à–∏–≤–∞–π—Ç–µ—Å—å –∫ —Å–µ–±–µ –∏ –±—É–¥—å—Ç–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã –≤ —Å–≤–æ–µ–π –ø—Ä–∞–∫—Ç–∏–∫–µ.\n'
                                                 f'–í–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ –±—É–¥—É —Ä–∞–¥–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ üå∑')


@dp.message_handler(Text(equals='–û–ø–ª–∞—Ç–∏—Ç—å', ignore_case=True))
async def set_tariff(message: types.Message, ):
    sqlite_db.add_subscription(str(message.from_user.id), str(message.from_user.username),
                               str(message.from_user.full_name),
                               datetime.datetime.now().date(),
                               datetime.datetime.now().date() + datetime.timedelta(days=31))
    await bot.send_message(message.from_user.id,
                           f'–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ', reply_markup=kb_client)


@dp.message_handler(Text(equals='–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞', ignore_case=True))
async def my_tariff(message: types.Message, ):
    try:
        await bot.send_message(message.from_user.id,
                               f'–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ {sqlite_db.get_subscriptions_by_user_id(message.from_user.id)[0][5]}')
    except:
        await bot.send_message(message.from_user.id,
                               f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏')


@dp.message_handler(Text(equals='–¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã', ignore_case=True))
async def tariffs(message: types.Message, ):
    await bot.send_message(message.from_user.id,
                           f'üóì –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ωüëáüëã',
                           reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /kick
@dp.message_handler(commands=['kick'])
async def kick_user(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏—è —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≥—Ä—É–ø–ø—ã
    if message.from_user.id in [admin.user.id for admin in await bot.get_chat_administrators(message.chat.id)]:
        # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å
        user_id = message.reply_to_message.from_user.id
        # –ü–µ—Ä–µ–¥–∞–µ–º –ø—Ä–∞–≤–∞, –∑–∞–ø—Ä–µ—â–∞—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ
        await bot.restrict_chat_member(message.chat.id, user_id, ChatPermissions(can_send_messages=False))
        # –ò—Å–∫–ª—é—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥—Ä—É–ø–ø—ã
        await bot.kick_chat_member(message.chat.id, user_id)
        await message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.full_name} –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –≥—Ä—É–ø–ø—ã.")
    else:
        await message.reply("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã.")


def handlers_register(dp: Dispatcher):
    dp.register_message_handler(start_bot, commands=['start', 'help'])
    dp.register_message_handler(get_contacts, Text(equals='–ü–æ–º–æ—â—å', ignore_case=True))
    dp.register_message_handler(set_tariff, Text(equals='–û–ø–ª–∞—Ç–∏—Ç—å', ignore_case=True))
    dp.register_message_handler(my_tariff, Text(equals='–ú–æ—è –ø–æ–¥–ø–∏—Å–∫–∞', ignore_case=True))
    dp.register_message_handler(tariffs, Text(equals='–¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã', ignore_case=True))
