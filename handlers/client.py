import datetime

from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text

from create_bot import bot, bot_address, dp
from keyboards.client_kb import keyboard, kb_client, kb_client_1, back_keyboard
from school_database import sqlite_db

"""–•–µ–Ω–¥–ª–µ—Ä—ã –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º
"""


@dp.message_handler(commands=['start', 'help'])
async def start_bot(message: types.Message):
    bot_home = bot_address  # –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∞–¥—Ä–µ—Å –±–æ—Ç–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º —Å—Ç—Ä–æ–∫–æ–π 't.me/bot'

    await bot.send_message(message.from_user.id,
                           f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å, {message.from_user.full_name} üëã',
                           reply_markup=kb_client
                           )
    await bot.send_message(message.from_user.id,
                           f'üóì –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ωüëáüëã',
                           reply_markup=keyboard)

    # await message.reply(f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É –≤ –õ–°: {bot_home}')


@dp.callback_query_handler(lambda c: c.data.startswith('button'))
async def process_callback(callback_query: types.CallbackQuery):
    await callback_query.answer()
    data = callback_query.data
    if data == "button1":
        await callback_query.message.reply("–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫ - —ç—Ç–æ –æ—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º "
                                           "—Å—Ç–∏–ª–µ–º –≤–µ–¥–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏–π –∏ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –π–æ–≥–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º!")
    elif data == "button2":
        await callback_query.message.reply("–ö—É—Ä—Å –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤ - –∏–¥–µ–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç "
                                           "—Å–≤–æ–π –ø—É—Ç—å –≤ –π–æ–≥–µ. –ú—ã –ø–æ–≥—Ä—É–∂–∞–µ–º—Å—è –≤ –æ—Å–Ω–æ–≤—ã –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ —Å–æ—Å—Ä–µ–¥–æ—Ç–∞—á–∏–≤–∞–µ–º—Å—è"
                                           " –Ω–∞ —É–∫—Ä–µ–ø–ª–µ–Ω–∏–∏ –æ—Å–Ω–æ–≤.",
                                           reply_markup=back_keyboard)
    elif data == "button3":
        await callback_query.message.reply("–û–Ω–ª–∞–π–Ω-–∫–ª—É–± - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –æ–Ω–ª–∞–π–Ω-—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö, "
                                           "–ø–æ–ª—É—á–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∏ –æ–±—â–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏"
                                           " —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.")
    elif data == "button4":
        await callback_query.message.reply("–û—Ñ–ª–∞–π–Ω-–∫–ª—É–± - –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç –∂–∏–≤—ã–µ –∑–∞–Ω—è—Ç–∏—è. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å "
                                           "–∫ –Ω–∞—à–µ–º—É –∫–ª—É–±—É –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∑–∞–Ω—è—Ç–∏—è–º–∏ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ"
                                           " —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è –∏ –≥–∞—Ä–º–æ–Ω–∏–∏.")
    elif data == "button5":
        await callback_query.message.reply(
                               f'üóì –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ωüëáüëã',
                               reply_markup=keyboard)
    elif data == "button6":
        await callback_query.message.reply("–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ–ø–ª–∞—Ç–µ", reply_markup=kb_client_1)       # –õ–Æ–¢–´–ô –ë–ê–ì
    else:
        await callback_query.message.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


@dp.message_handler(Text(equals='–ü–æ–º–æ—â—å', ignore_case=True))
async def get_contacts(message: types.Message):
    address = "lt.oren@mail.ru"
    phones = '+7 903 360-69-03'
    await bot.send_message(message.from_user.id, f'–ü–æ—á—Ç–∞:: {address} \n–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä: {phones}')


@dp.message_handler(Text(equals='–ö—É—Ä—Å –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤', ignore_case=True))
async def get_contacts(message: types.Message):
    address = "lt.oren@mail.ru"
    phones = '+7 903 360-69-03'
    await bot.send_message(message.from_user.id, f'1 –£—Ä–æ–∫. –û–±—â–∞—è –º–æ–±–∏–ª–∏–∑–∞—Ü–∏—è.\n\n'
                                                 f'https://youtu.be/wPY_pjVaCPw\n\n'
                                                 f'2 –£—Ä–æ–∫. –ü—Ä–æ–¥–æ–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø—Ä–æ–¥–æ–ª—å–Ω–æ–º—É —à–ø–∞–≥–∞—Ç—É.\n\n'
                                                 f'https://youtu.be/Bg8UdyWs25Q\n\n'
                                                 f'3 –£—Ä–æ–∫. –ü–æ–ø–µ—Ä–µ—á–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø–æ–ø–µ—Ä–µ—á–Ω–æ–º—É —à–ø–∞–≥–∞—Ç—É.\n\n'
                                                 f'https://youtu.be/LvVoG9Eprb8\n\n'
                                                 f'4 –£—Ä–æ–∫. –ü—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–∑–æ–±–µ–¥—Ä–µ–Ω–Ω—ã—Ö —Å—É—Å—Ç–∞–≤–æ–≤.\n\n'
                                                 f'https://youtu.be/1RwMGYVDGS8\n\n'
                                                 f'–£—Ä–æ–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —á–µ—Ä–µ–¥–æ–≤–∞—Ç—å, –¥–µ–ª–∞—è –º–µ–∂–¥—É –Ω–∏–º–∏ —Ä–∞–≤–Ω—ã–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–µ—Ä–µ—Ä—ã–≤—ã. –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ –¥–µ–Ω—å.\n'
                                                 f'–ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ, —á—Ç–æ –∑–∞–Ω–∏–º–∞—è—Å—å –ø–æ –≤–∏–¥–µ–æ, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ –ø–∞—É–∑—É, '
                                                 f'—á—Ç–æ–±—ã —É–¥–µ–ª–∏—Ç—å –±–æ–ª—å—à–µ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º, –ø—Ä–∏—Å–ª—É—à–∏–≤–∞–π—Ç–µ—Å—å –∫ —Å–µ–±–µ –∏ –±—É–¥—å—Ç–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã –≤ —Å–≤–æ–µ–π –ø—Ä–∞–∫—Ç–∏–∫–µ.\n'
                                                 f'–í–ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–µ –±—É–¥—É —Ä–∞–¥–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ üå∑')


@dp.message_handler(Text(equals='–û–ø–ª–∞—Ç–∏—Ç—å', ignore_case=True))
async def set_tariff(message: types.Message,):
    sqlite_db.add_subscription(str(message.from_user.id), str(message.from_user.username),
                               str(message.from_user.full_name),
                               datetime.datetime.now().date(),
                               datetime.datetime.now().date() + datetime.timedelta(days=31))


def handlers_register(dp: Dispatcher):
    dp.register_message_handler(start_bot, commands=['start', 'help'])
    dp.register_message_handler(get_contacts, Text(equals='–ü–æ–º–æ—â—å', ignore_case=True))
    dp.register_message_handler(set_tariff, Text(equals='–û–ø–ª–∞—Ç–∏—Ç—å', ignore_case=True))
